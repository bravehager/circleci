=begin
#CircleCI API

#This describes the resources that make up the CircleCI API v2.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

OpenAPI spec version: v2

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.34
=end

# Common files
require 'circleci/api_client'
require 'circleci/api_error'
require 'circleci/version'
require 'circleci/configuration'

# Models
require 'circleci/models/all_ofinline_response_200_6_flakytests_job_number'
require 'circleci/models/all_ofinline_response_200_6_flakytests_pipeline_number'
require 'circleci/models/all_ofinline_response_200_6_flakytests_time_wasted'
require 'circleci/models/any_ofinline_response_200_2'
require 'circleci/models/artifact'
require 'circleci/models/artifact_list_response'
require 'circleci/models/checkout_key'
require 'circleci/models/checkout_key_1'
require 'circleci/models/checkout_key_input'
require 'circleci/models/checkout_key_list_response'
require 'circleci/models/collaboration'
require 'circleci/models/context'
require 'circleci/models/context_1'
require 'circleci/models/context_body'
require 'circleci/models/create_schedule_parameters'
require 'circleci/models/environment_variable_list_response'
require 'circleci/models/environment_variable_pair'
require 'circleci/models/environment_variable_pair_1'
require 'circleci/models/environmentvariable_envvarname_body'
require 'circleci/models/inline_response_200'
require 'circleci/models/inline_response_200_1'
require 'circleci/models/inline_response_200_10'
require 'circleci/models/inline_response_200_10_items'
require 'circleci/models/inline_response_200_11'
require 'circleci/models/inline_response_200_11_metrics'
require 'circleci/models/inline_response_200_11_metrics_duration_metrics'
require 'circleci/models/inline_response_200_11_trends'
require 'circleci/models/inline_response_200_12'
require 'circleci/models/inline_response_200_12_most_failed_tests'
require 'circleci/models/inline_response_200_12_test_counts'
require 'circleci/models/inline_response_200_12_test_runs'
require 'circleci/models/inline_response_200_13'
require 'circleci/models/inline_response_200_1_items'
require 'circleci/models/inline_response_200_2'
require 'circleci/models/inline_response_200_3'
require 'circleci/models/inline_response_200_3_metrics'
require 'circleci/models/inline_response_200_3_project_data'
require 'circleci/models/inline_response_200_3_project_data_metrics'
require 'circleci/models/inline_response_200_3_project_data_trends'
require 'circleci/models/inline_response_200_3_project_workflow_branch_data'
require 'circleci/models/inline_response_200_3_project_workflow_data'
require 'circleci/models/inline_response_200_3_trends'
require 'circleci/models/inline_response_200_4'
require 'circleci/models/inline_response_200_4_items'
require 'circleci/models/inline_response_200_4_metrics'
require 'circleci/models/inline_response_200_4_metrics_duration_metrics'
require 'circleci/models/inline_response_200_5'
require 'circleci/models/inline_response_200_5_metrics'
require 'circleci/models/inline_response_200_5_org_data'
require 'circleci/models/inline_response_200_5_org_data_metrics'
require 'circleci/models/inline_response_200_5_org_data_trends'
require 'circleci/models/inline_response_200_5_org_project_data'
require 'circleci/models/inline_response_200_5_trends'
require 'circleci/models/inline_response_200_6'
require 'circleci/models/inline_response_200_6_flakytests'
require 'circleci/models/inline_response_200_7'
require 'circleci/models/inline_response_200_7_items'
require 'circleci/models/inline_response_200_7_metrics'
require 'circleci/models/inline_response_200_8'
require 'circleci/models/inline_response_200_8_items'
require 'circleci/models/inline_response_200_9'
require 'circleci/models/inline_response_200_9_items'
require 'circleci/models/inline_response_200_9_metrics'
require 'circleci/models/inline_response_200_9_metrics_duration_metrics'
require 'circleci/models/inline_response_202'
require 'circleci/models/inline_response_default'
require 'circleci/models/job'
require 'circleci/models/job_details'
require 'circleci/models/job_details_contexts'
require 'circleci/models/job_details_executor'
require 'circleci/models/job_details_latest_workflow'
require 'circleci/models/job_details_messages'
require 'circleci/models/job_details_organization'
require 'circleci/models/job_details_parallel_runs'
require 'circleci/models/job_details_pipeline'
require 'circleci/models/job_details_project'
require 'circleci/models/message_response'
require 'circleci/models/one_ofcontext_body_owner'
require 'circleci/models/pipeline'
require 'circleci/models/pipeline_1'
require 'circleci/models/pipeline_config'
require 'circleci/models/pipeline_continue_body'
require 'circleci/models/pipeline_creation'
require 'circleci/models/pipeline_list_response'
require 'circleci/models/pipeline_list_response_errors'
require 'circleci/models/pipeline_list_response_trigger'
require 'circleci/models/pipeline_list_response_trigger_actor'
require 'circleci/models/pipeline_list_response_vcs'
require 'circleci/models/pipeline_list_response_vcs_commit'
require 'circleci/models/project'
require 'circleci/models/project_vcs_info'
require 'circleci/models/projectprojectslugschedule_timetable'
require 'circleci/models/rerun_workflow_parameters'
require 'circleci/models/schedule'
require 'circleci/models/schedule_1'
require 'circleci/models/schedulescheduleid_timetable'
require 'circleci/models/tests_response'
require 'circleci/models/tests_response_items'
require 'circleci/models/trigger_pipeline_parameters'
require 'circleci/models/update_schedule_parameters'
require 'circleci/models/user'
require 'circleci/models/user_1'
require 'circleci/models/workflow'
require 'circleci/models/workflow_1'
require 'circleci/models/workflow_job_list_response'
require 'circleci/models/workflow_list_response'

# APIs
require 'circleci/api/context_api'
require 'circleci/api/insights_api'
require 'circleci/api/job_api'
require 'circleci/api/pipeline_api'
require 'circleci/api/project_api'
require 'circleci/api/schedule_api'
require 'circleci/api/user_api'
require 'circleci/api/workflow_api'

module CircleCi
  class << self
    # Customize default settings for the SDK using block.
    #   CircleCi.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
